---
  - name: Install Clickhouse
    hosts: clickhouse
    vars_files:
      - ./group_vars/clickhouse/vars.yml
    handlers:
      - name: Start clickhouse service
        become: true
        ansible.builtin.service:
          name: clickhouse-server
          state: restarted
    tasks:
      - block:
        - name: Get clickhouse distrib (rpm noarch package)
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.{{ platform }}.rpm"
                 #https://packages.clickhouse.com/rpm/stable/clickhouse-client-23.5.3.24.x86_64.rpm
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
        rescue:
          - name: Get clickhouse distrib (rpm package)
            ansible.builtin.get_url:
              url: https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.{{ platform }}.rpm
              dest: ./clickhouse-common-static-{{ clickhouse_version }}.rpm
        always:
          - name: Install clickhouse packages
            become: true
            ansible.builtin.yum:
              name:
                - clickhouse-common-static-{{ clickhouse_version }}.rpm
                - clickhouse-client-{{ clickhouse_version }}.rpm
                - clickhouse-server-{{ clickhouse_version }}.rpm
            notify: Start clickhouse service
          - name: Flush handlers
            ansible.builtin.meta: flush_handlers
          - name: Create database
            ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
            register: create_db
            failed_when: create_db.rc != 0 and create_db.rc !=82
            changed_when: create_db.rc == 0

  - name: Install and configure Vector
    hosts: vector
    vars_files:
      - ./group_vars/vector/vars.yml
    vars:
      hostvars: clickhouse
    handlers:
      - name: Start Vector service
        become: true
        ansible.builtin.service:
          name: vector
          state: restarted

    tasks:
      - name: Add clickhouse addresses to /etc/hosts
        become: true
        lineinfile:
          dest: /etc/hosts
          regexp: '.*{{ item }}$'
          line: "{{ hostvars[item].ansible_host }} {{item}}"
          state: present
        when: hostvars[item].ansible_host is defined
        with_items: "{{ groups.clickhouse }}"

      - name: Get vector distrib
        ansible.builtin.get_url:
          url: "https://packages.timber.io/vector/latest/vector-{{ vector_version }}.x86_64.rpm"
          dest: "./vector-{{ vector_version }}.x86_64.rpm"

      - name: Install vector package
        become: true
        ansible.builtin.yum:
          name:
            - "./vector-{{ vector_version }}.x86_64.rpm"

      - name: Redefine vector config name
        tags: vector_config
        become: true
        ansible.builtin.lineinfile:
          path: /etc/default/vector
          regexp: 'VECTOR_CONFIG='
          line: VECTOR_CONFIG=/etc/vector/config.yaml

      - name: Create vector config
        tags: vector_config
        become: true
        ansible.builtin.copy:
          dest: /etc/vector/config.yaml
          content: |
            {{ vector_config | to_nice_yaml(indent=2) }}

        notify: Start Vector service

  - name: Install Lighthouse
    tags: lighthouse
    hosts: lighthouse
    vars_files:
      - ./group_vars/lighthouse/vars.yml
    handlers:
      - name: Start nginx service
        become: true
        service:
          name: nginx
          state: restarted
    tasks:
      - name: Add clickhouse addresses to /etc/hosts
        become: true
        lineinfile:
          dest: /etc/hosts
          regexp: '.*{{ item }}$'
          line: "{{ hostvars[item].ansible_host }} {{item}}"
          state: present
        when: hostvars[item].ansible_host is defined
        with_items: "{{ groups.clickhouse }}"

      - name: Install epel-release package
        become: true
        ansible.builtin.yum:
          name: epel-release
          state: present
      - name: Update repositories
        become: true
        ansible.builtin.yum:
          name: '*'
          state: latest

      - name: Install Nginx and Unzip
        become: true
        ansible.builtin.yum:
          name:
            - nginx
            - unzip
          state: present

      - block:
          - name: Get lighthouse distrib
            ansible.builtin.get_url:
              url: "{{ lighthouse_distrib }}"
              dest: ./lighthouse.zip
          - name: Create directory
            become: true
            file:
              path: /usr/share/nginx
              state: directory
              force: yes
          - name: Unpack lighthouse archive
            become: true
            ansible.builtin.unarchive:
              src: /home/centos/lighthouse.zip
              dest: /usr/share/nginx
              remote_src: yes
          - name: Nginx configuration
            tags: nginx_config
            become: true
            ansible.builtin.copy:
              dest: /etc/nginx/conf.d/lighthouse.conf
              content: |
                {{ nginx_conf | to_nice_yaml(indent=2) }}

            notify: Start nginx service
